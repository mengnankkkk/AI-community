# AI虚拟播客工作室 - Docker Compose配置
version: '3.8'

services:
  # 后端API服务
  backend:
    build:
      context: ../src/backend
      dockerfile: Dockerfile
    container_name: ai-podcast-backend
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - DEBUG=${DEBUG:-false}
      - CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL:-https://api.openai.com/v1}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - REDIS_URL=redis://redis:6379/0
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
    volumes:
      - ../data/uploads:/app/uploads
      - ../data/output:/app/outputs
      - ./temp:/app/temp
      - ../data/output/logs:/app/logs
      - ../.env:/app/.env:ro
    depends_on:
      - redis
      - chromadb
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ai-podcast-network

  # 前端Web服务
  frontend:
    image: nginx:alpine
    container_name: ai-podcast-frontend
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - ai-podcast-network

  # Redis缓存服务（用于任务队列和缓存）
  redis:
    image: redis:7-alpine
    container_name: ai-podcast-redis
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - ai-podcast-network

  # ChromaDB向量数据库（用于RAG知识库）
  chromadb:
    image: ghcr.io/chroma-core/chroma:latest
    container_name: ai-podcast-chromadb
    ports:
      - "8001:8000"
    environment:
      - CHROMA_SERVER_AUTHN_CREDENTIALS_FILE=/chroma/server.htpasswd
      - CHROMA_SERVER_AUTHN_PROVIDER=chromadb.auth.basic.BasicAuthenticationServerProvider
    volumes:
      - chromadb_data:/chroma/chroma
      - ./chroma-config:/chroma/config:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - ai-podcast-network

networks:
  ai-podcast-network:
    driver: bridge

volumes:
  redis_data:
    driver: local
  chromadb_data:
    driver: local